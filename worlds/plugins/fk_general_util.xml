<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
    name="FK_General_Util"
    author="Areia"
    id="3d8e9058038521b5501a2bac"
    language="Lua"
    purpose="General useful aliases and macros"
    save_state="n"
    date_written="2022-03-30 14:00:00"
    requires="5.06"
    version="0.00"
>
<description trim="y">
<![CDATA[
]]>
</description>

</plugin>

<include name="constants.lua"/>



<aliases>
    <alias
     match="^cc +(.+)$"
     enabled="y"
     send_to="0"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        cook '%1 corpse'
     </send>
    </alias>

    <alias
     match="^cm(.*)$"
     enabled="y"
     send_to="0"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        combatmode%1
     </send>
    </alias>

    <alias
     match="^gac(\d*)$"
     enabled="y"
     send_to="12"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        local index = tonumber("%1") or 1
        local cmd = "get all.coins %d.corpse"
        Send(cmd:format(index))
     </send>
    </alias>

    <alias
     match="^gc(\d*) +(.+)$"
     enabled="y"
     send_to="12"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        local target = trim("%2")
        local index = tonumber("%1") or 1
        local cmd = "get %s %d.corpse"
        Send(cmd:format(target, index))
     </send>
    </alias>

    <alias
     match="^gls$"
     enabled="y"
     send_to="0"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        glance self
     </send>
    </alias>

    <alias
     match="^li (.*)$"
     enabled="y"
     send_to="0"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        look in %1
     </send>
    </alias>

    <alias
     match="^lu (.*)$"
     enabled="y"
     send_to="0"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        look under %1
     </send>
    </alias>

    <alias
     match="^no$"
     enabled="y"
     send_to="0"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        nod
     </send>
    </alias>

    <alias
     match="^p (.*)$"
     enabled="y"
     send_to="0"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        put %1
     </send>
    </alias>

    <alias
     match="^sc(?:an?)?$"
     enabled="y"
     send_to="12"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        local dirs = {
            "north", "northeast", "east", "southeast", "south",
            "southwest", "west", "northwest", "up", "down"
        }
        local arg = table.concat(dirs, " ")
        Execute("scan " .. arg)
     </send>
    </alias>
    <alias
     match="^sc(?:an?)? +(.+)$"
     enabled="y"
     send_to="12"
     regexp="y"
     ignore_case="y"
     sequence="100"
    >
     <send>
        local targets = trim("%1")
        targets = targets:gsub("%s+", " ")
        targets = utils.split(targets, " ")
        for _, target in ipairs(targets) do
            Send("look " .. target)
        end
     </send>
    </alias>
</aliases>


<triggers>
    <trigger
     match="^Ok\.$"
     enabled="y"
     regexp="y"
     omit_from_output="y"
     sequence="100"
    >
    </trigger>
</triggers>


<script>
<![CDATA[
require("commas")
require("serialize")
require("tprint")
require("var")
require("wait")
local const = require("fk_const")


--------------------------------------------------
-- Core
--------------------------------------------------


Core = {}


function Core.initialize()
    AcceleratorTo("ALT+G", "group", sendto.world)
    AcceleratorTo("ALT+L", "scan", sendto.execute)
    AcceleratorTo("ALT+P", "config +prompt;config -prompt", sendto.execute)
    AcceleratorTo("ALT+T", "time", sendto.world)
end
]]>
</script>



<script>
<![CDATA[
--------------------------------------------------
-- Utility
--------------------------------------------------


Utility = {}


function Utility.initialize()
    local initializers = {
        Core.initialize,
    }
    for _, initializer in ipairs(initializers) do
        initializer()
    end
end


function Utility.deinitialize()
end
]]>
</script>


<script>
<![CDATA[
--------------------------------------------------
-- Plugin Callbacks
--------------------------------------------------


function OnPluginInstall()
    Utility.initialize()
end


function OnPluginEnable()
    OnPluginInstall()
end


function OnPluginClose()
    Utility.deinitialize()
end


function OnPluginDisable()
    OnPluginClose()
end


function OnPluginBroadcast(msg, id, name, text)
end
]]>
</script>


</muclient>
